---
# Source: business/charts/inventory-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: inventory-service
  name: inventory-service
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 9191
  selector:
    app: inventory-service
status:
  loadBalancer: {}
---
# Source: business/charts/notification-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: notification-service
  name: notification-service
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 9192
  selector:
    app: notification-service
status:
  loadBalancer: {}
---
# Source: business/charts/order-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: order-service
  name: order-service
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 9193
  selector:
    app: order-service
status:
  loadBalancer: {}
---
# Source: business/charts/product-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: product-service
  name: product-service
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 9194
  selector:
    app: product-service
status:
  loadBalancer: {}
---
# Source: business/charts/inventory-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: inventory-service
  name: inventory-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
  strategy: {}
  template:
    metadata:

      labels:
        app: inventory-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-inventory:5432/inventory-service
            - name: SPRING_PROFILES_ACTIVE
              value: docker
          image: "gayankod/inventory-service:latest"
          name: inventory-service
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: business/charts/notification-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: notification-service
  name: notification-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  strategy: {}
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
        - env:
            - name: SPRING_PROFILES_ACTIVE
              value: docker
          image: "gayankod/notification-service:latest"
          name: notification-service
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: business/charts/order-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: order-service
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  strategy: {}
  template:
    metadata:

      labels:
        app: order-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-order:5431/order-service
            - name: SPRING_PROFILES_ACTIVE
              value: docker
          image: "gayankod/order-service:latest"
          name: order-service
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: business/charts/product-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: product-service
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  strategy: {}
  template:
    metadata:

      labels:
        app: product-service
    spec:
      containers:
        - env:
            - name: SPRING_PROFILES_ACTIVE
              value: docker
          image: "gayankod/product-service:latest"
          name: product-service
          resources: {}
      restartPolicy: Always
status: {}
